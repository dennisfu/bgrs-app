{"version":3,"sources":["logo.svg","reducers/Actions.js","components/People.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","reducers/Reducer.js","app/store.js","serviceWorker.js","index.js"],"names":["SET_PEOPLELIST","SET_PEOPLESELECTED","SET_LOADINGLIST","SET_LOADING","People","peopleList","useSelector","state","UiReducer","peopleSelected","isLoadingList","isLoading","useState","page","setPage","show","setShow","handleClose","dispatch","useDispatch","useEffect","type","payload","axios","get","then","response","data","results","error","setPeopleList","className","p","items","number","push","Pagination","Item","active","activeLabel","onClick","pageContent","Spinner","animation","variant","Dropdown","DropdownButton","as","ButtonGroup","id","title","name","Array","isArray","length","map","i","url","urlSelected","responseData","films","promises","f","res","catch","err","message","Promise","all","reslist","lastyear","reduce","prev","current","release_date","movies","Card","Header","Text","Tabs","defaultActiveKey","Tab","eventKey","ListGroup","birth_year","eye_color","gender","hair_color","height","mass","skin_color","m","Button","key","Modal","onHide","closeButton","Title","Body","opening_crawl","director","producer","Footer","Date","getFullYear","App","fetchCount","amount","resolve","setTimeout","incrementAsync","createAsyncThunk","a","counterSlice","createSlice","initialState","value","status","reducers","increment","decrement","incrementByAmount","action","extraReducers","builder","addCase","pending","fulfilled","actions","initState","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e12fb9d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import axios from 'axios';\r\nexport let SET_PEOPLELIST = 'setPeopleList';\r\nexport let SET_PEOPLESELECTED = 'setPeopleSelected';\r\nexport let SET_LOADINGLIST = 'setLoadingList';\r\nexport let SET_LOADING = 'setLoading';\r\n\r\n\r\nexport  function setLoadingList(isLoadingList) {\r\n    return dispatch => {\r\n        dispatch({type: SET_LOADINGLIST, payload: isLoadingList})\r\n    }\r\n}\r\n\r\nexport  function setLoading(isLoading) {\r\n    return dispatch => {\r\n        dispatch({type: SET_LOADING, payload: isLoading})\r\n    }\r\n}\r\n\r\nexport function setPeopleList(page) {\r\n    return dispatch => {\r\n        dispatch({type: SET_LOADINGLIST, payload: true});\r\n        dispatch({type: SET_PEOPLESELECTED, payload: {}});\r\n        return axios.get(`https://swapi.dev/api/people/?page=${page}`).then((response) => {\r\n            // console.log(response);\r\n            dispatch({type: SET_PEOPLELIST, payload: response.data.results});\r\n            dispatch({type: SET_LOADINGLIST, payload: false});\r\n        }, (error) => {\r\n            dispatch({type: SET_LOADINGLIST, payload: false});\r\n            dispatch({type: SET_PEOPLELIST, payload: []});\r\n        })\r\n    }\r\n}\r\n\r\nexport function setPeopleSelected(urlSelected) {\r\n    return dispatch => {\r\n        if (urlSelected===\"\") {\r\n            dispatch({type: SET_PEOPLESELECTED, payload: {}});\r\n        } else {\r\n            dispatch({type: SET_LOADING, payload: true});\r\n            return axios.get(urlSelected).then((response) => {\r\n                const responseData = response.data;\r\n                if (response.data.films.length>0) {\r\n                    const promises = response.data.films.map((f)=>axios.get(f)\r\n                    .then((res) => {\r\n                        return res.data\r\n                    })\r\n                    .catch((err) => {\r\n                        return {error: err.message};\r\n                    }) );\r\n                    Promise.all(promises).then((reslist) => {\r\n                        const lastyear = reslist.reduce((prev, current) => {\r\n                            return (prev.release_date > current.release_date) ? prev : current\r\n                        })\r\n                        dispatch({type: SET_PEOPLESELECTED, payload: {...responseData,...{movies:reslist, lastyear}}});\r\n                        dispatch({type: SET_LOADING, payload: false});\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({type: SET_PEOPLESELECTED, payload: {...responseData,...{movies:[], lastyear:{}}}});\r\n                        dispatch({type: SET_LOADING, payload: false});\r\n\r\n                    });\r\n                } else {\r\n                    dispatch({type: SET_PEOPLESELECTED, payload: {...responseData,...{movies:[], lastyear:{}}}});\r\n                    dispatch({type: SET_LOADING, payload: false});\r\n                }\r\n                \r\n            }, (error) => {\r\n                dispatch({type: SET_LOADING, payload: false});\r\n                dispatch({type: SET_PEOPLESELECTED, payload: {}});\r\n            });\r\n        }    \r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {Button, ButtonGroup, Card, Dropdown, DropdownButton, ListGroup, Modal, Pagination, Spinner, Tabs, Tab} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport {setPeopleList, setPeopleSelected} from \"../reducers/Actions\";\r\nimport './People.scss';\r\n\r\nexport const People = () => {\r\n    // console.log(useSelector(state => state));\r\n    const peopleList = useSelector(state => state.UiReducer.peopleList);\r\n    const peopleSelected = useSelector(state => state.UiReducer.peopleSelected);\r\n    const isLoadingList = useSelector(state=> state.UiReducer.isLoadingList);\r\n    const isLoading = useSelector(state=> state.UiReducer.isLoading);\r\n    \r\n    // const [selected, setSelected] = useState(people.url);\r\n    const [page, setPage] = useState(1);\r\n    const [show, setShow] = useState('');\r\n\r\n    const handleClose = () => setShow('');\r\n    const handleShow = (key) => setShow(key);\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        dispatch(setPeopleList(page)); \r\n    }, [page]);\r\n    \r\n    const pageContent = (p) => {\r\n        const items=[];\r\n        for (let number = 1; number <= 9; number++) {\r\n            items.push(\r\n            <Pagination.Item key={number} active={number === p} activeLabel=\"\" onClick={number === p? null : ()=>setPage(number)}>\r\n                {number}\r\n            </Pagination.Item>,\r\n            );\r\n        }\r\n        return (\r\n            <Pagination>{items}</Pagination>\r\n        )\r\n    }  \r\n    \r\n    return (\r\n        <div className=\"people-page\">\r\n            {pageContent(page)}\r\n            {isLoadingList ? \r\n                <Spinner animation=\"border\" variant=\"primary\" /> : \r\n                <Dropdown>\r\n                    <DropdownButton\r\n                        as={ButtonGroup}\r\n                        key=\"dropdown-charater\"\r\n                        id=\"dropdown-charater\"\r\n                        title={peopleSelected.name?peopleSelected.name:'Select a character'}\r\n                    >\r\n                        {\r\n                            Array.isArray(peopleList) && peopleList.length>0 && \r\n                            peopleList.map((p, i)=>{\r\n                                return (\r\n                                    <Dropdown.Item \r\n                                        key={`p${i}`} \r\n                                        active={p.url===peopleSelected.url}\r\n                                        onClick = {p.url===peopleSelected.url ? null : ()=>dispatch(setPeopleSelected(p.url))}\r\n                                    >{p.name}</Dropdown.Item>\r\n                                )\r\n                            })\r\n                        }    \r\n                    </DropdownButton>\r\n                </Dropdown>\r\n            } \r\n            <div className=\"people-card\">\r\n            {isLoading ? \r\n                <Spinner animation=\"border\" variant=\"primary\" /> :\r\n                peopleSelected.name &&\r\n                <Card>\r\n                    <Card.Header><h3>{peopleSelected.name}</h3></Card.Header>\r\n                    <Card.Text>\r\n                        <Tabs defaultActiveKey=\"movies\" id=\"uncontrolled-tab\" className=\"mb-3\">\r\n                            <Tab eventKey=\"profile\" title=\"Profile\">\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"primary\">Birth Year: {peopleSelected.birth_year}</ListGroup.Item>\r\n                                    <ListGroup.Item>Eye Color: {peopleSelected.eye_color}</ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"primary\">Gender: {peopleSelected.gender}</ListGroup.Item>\r\n                                    <ListGroup.Item>Hair Color: {peopleSelected.hair_color}</ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"primary\">Height: {peopleSelected.height}</ListGroup.Item>\r\n                                    <ListGroup.Item>Mass: {peopleSelected.mass}</ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"primary\">Skin Color: {peopleSelected.skin_color}</ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Tab>\r\n                            <Tab eventKey=\"movies\" title=\"Movies\">\r\n                                <ListGroup>\r\n                                    {Array.isArray(peopleSelected.movies) && peopleSelected.movies.length>0 && peopleSelected.movies.map((m,i)=> {\r\n                                            return (\r\n                                                <ListGroup.Item key={`m${i}`} variant={i%2===0?'primary':''}>\r\n                                                    <Button variant=\"link\" onClick={()=>handleShow(`m${i}`)}>\r\n                                                        {m.title} realesed on {m.release_date}\r\n                                                    </Button>\r\n                                                    <Modal show={show===`m${i}`} onHide={handleClose}>\r\n                                                        <Modal.Header closeButton>\r\n                                                        <Modal.Title>{m.title}</Modal.Title>\r\n                                                        </Modal.Header>\r\n                                                        <Modal.Body>\r\n                                                            <p>Realesed on {m.release_date}</p>\r\n                                                            <p>{m.opening_crawl}</p>\r\n                                                            <p>Director: {m.director}<br />Producer: {m.producer}</p>\r\n                                                        </Modal.Body>\r\n                                                        <Modal.Footer>\r\n                                                        \r\n                                                        <Button variant=\"primary\" onClick={handleClose}>\r\n                                                            Close\r\n                                                        </Button>\r\n                                                        </Modal.Footer>\r\n                                                    </Modal>\r\n                                                    \r\n                                                </ListGroup.Item> \r\n                                            )     \r\n                                        }\r\n                                    )}\r\n                                </ListGroup>\r\n                            </Tab>\r\n                            <Tab eventKey=\"lastyear\" title=\"Last Year\">\r\n                                <p>{`${new Date(peopleSelected.lastyear.release_date).getFullYear()} in ${peopleSelected.lastyear.title}`}</p>\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Card.Text>    \r\n                </Card>\r\n            }\r\n            </div>        \r\n        </div>    \r\n    ) \r\n}","import React from 'react';\nimport logo from './logo.svg';\n// import { Counter } from './features/counter/Counter';\nimport {People} from './components/People';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n      </header>\n      <People />\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import {\r\n    SET_PEOPLELIST,\r\n    SET_PEOPLESELECTED,\r\n    SET_LOADING,\r\n    SET_LOADINGLIST\r\n} from './Actions';\r\n\r\nconst initState = {\r\n    isLoading: false,\r\n    isLoadingList: false,\r\n    peopleList: [],\r\n    peopleSelected: {}\r\n}\r\n\r\nexport default function UiReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case SET_LOADINGLIST:\r\n            return { ...state, isLoadingList: action.payload };\r\n        case SET_LOADING:\r\n            return { ...state, isLoading: action.payload };\r\n        case SET_PEOPLELIST:\r\n            return { ...state, peopleList: action.payload };\r\n        case SET_PEOPLESELECTED:\r\n            return { ...state, peopleSelected: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport UiReducer from '../reducers/Reducer';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    UiReducer: UiReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}